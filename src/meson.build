defs = [
    '-DCGIBIN_DIR="' + CGIBIN_DIR + '"',
    '-DAUXBIN_DIR="' + AUXBIN_DIR + '"',
    '-DHELP_DIR="' + HELP_DIR + '"',
    '-DETC_DIR="' + ETC_DIR + '"',
    '-DCONF_DIR="' + CONF_DIR + '"',
    '-DRC_DIR="' + RC_DIR + '"',
    '-DLOCALEDIR="' + localedir + '"',
    '-DWIN32_LEAN_AND_MEAN=1',
    # '-w',
]

without_gc_lib = static_library(
    'without_gc_lib',
    [
        'stringtoken.cpp',
        'utf8.cpp',
        'myctype.cpp',
        'quote.cpp',
        'cmp.cpp',
        'ioutil.cpp',
        'url_quote.cpp',
        'url_scheme.cpp',
        'url.cpp',
        'url_decode.cpp',
        'lineprop.cpp',
        'entity.cpp',
        'anchor.cpp',
        'line.cpp',
        'event.cpp',
        'tmpfile.cpp',
        'mimetypes.cpp',
        'mimehead.cpp',
        'compression.cpp',
        'cookie_domain.cpp',
        'cookie.cpp',
        'matchattr.cpp',
        'generallist.cpp',
        'downloadlist.cpp',
        'form.cpp',
        'auth_pass.cpp',
        'http_request.cpp',
        'mytime.cpp',
        'http_response.cpp',
        'istream.cpp',
        'opensocket.cpp',
        'http_option.cpp',
        'http_auth.cpp',
        'local_cgi.cpp',
        'ssl_util.cpp',
        'url_stream.cpp',
        'http_session.cpp',
        'html_command.cpp',
        'html_tag.cpp',
        'html_tag_parse.cpp',
        'html_token.cpp',
        'line_data.cpp',
        'line_layout.cpp',
        'dict.cpp',
        'invoke.cpp',
        'etc.cpp',
        'file_util.cpp',
        'history.cpp',
        'loaddirectory.cpp',
        'mailcap.cpp',
        'matrix.cpp',
        'symbol.cpp',
        'search.cpp',
        'linein.cpp',
        'option_param.cpp',
        'readtoken.cpp',
        'html_feed_env.cpp',
        'html_table.cpp',
        'buffer.cpp',
        'app.cpp',
        'tabbuffer.cpp',
        'proc.cpp',
        'push_symbol.cpp',
        'option.cpp',
        'rc.cpp',
        'platform.cpp',
        'load_buffer.cpp',
        'html_meta.cpp',
        'line_break.cpp',
        'html_renderer.cpp',
        'html_table_status.cpp',
    ],
    cpp_args: defs,
    dependencies: [
        deps,
        zlib_dep,
        # ftxui
        screen_dep,
        dom_dep,
        component_dep,
    ],
)

if host_machine.system() == 'windows'
    deps += cpp.find_library('ws2_32', required: true)
endif

without_gc_dep = declare_dependency(
    include_directories: include_directories('.'),
    link_with: without_gc_lib,
    dependencies: deps,
)
